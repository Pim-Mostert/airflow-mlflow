services:
  postgres:
    container_name: postgres
    image: postgres:16
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_AIRFLOW_PASSWORD: ${POSTGRES_AIRFLOW_PASSWORD}
      POSTGRES_MLFLOW_PASSWORD: ${POSTGRES_MLFLOW_PASSWORD}
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ${STORAGE_LOCATION}/postgres:/var/lib/postgresql/data
      
  airflow-webserver:
    container_name: airflow-webserver
    depends_on: 
      - postgres
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:${POSTGRES_AIRFLOW_PASSWORD}@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      MLFLOW_TRACKING_URI: http://mlflow:9000
      AIRFLOW__WEBSERVER__AUTH_ROLE_PUBLIC: Admin
      GIT_HASH_FILE_NAME: ${GIT_HASH_FILE_NAME}
    volumes:
      - ./airflow/webserver_config.py:/opt/airflow/webserver_config.py
      - ${STORAGE_LOCATION}/airflow/logs:/opt/airflow/logs
    ports:
      - 8080:8080
    command: >
      bash -c "
      airflow db init &&
      airflow webserver
      "
    mem_limit: ${WORKER_MEM}
    cpu_count: ${WORKER_CPU}

  airflow-scheduler:
    container_name: airflow-scheduler
    depends_on: 
      - postgres
      - airflow-webserver
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:${POSTGRES_AIRFLOW_PASSWORD}@postgres/airflow
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      MLFLOW_TRACKING_URI: http://mlflow:9000
      AIRFLOW__WEBSERVER__AUTH_ROLE_PUBLIC: Admin
      GIT_HASH_FILE_NAME: ${GIT_HASH_FILE_NAME}
    volumes:
      - ./airflow/webserver_config.py:/opt/airflow/webserver_config.py
      - ${STORAGE_LOCATION}/airflow/logs:/opt/airflow/logs
    command: scheduler
    mem_limit: ${WORKER_MEM}
    cpu_count: ${WORKER_CPU}
    
  # mlflow:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile.mlflow
  #   container_name: mlflow
  #   volumes:
  #     - ${STORAGE_LOCATION}/mlflow/database:/mlflow/database
  #     - ${STORAGE_LOCATION}/mlflow/artifacts:/mlflow/artifacts
  #   ports:
  #     - 9000:9000
  #   command: >
  #     mlflow server
  #     --backend-store-uri "postgresql+psycopg2://mlflow:${POSTGRES_MLFLOW_PASSWORD}@postgres/mlflow"
  #     --artifacts-destination /mlflow/artifacts
  #     --serve-artifacts
  #     --port 9000
  #     --host 0.0.0.0
      